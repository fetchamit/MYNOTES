Introduction to JQuery
***********************
=> JQuery is a JavaScript Library.
=> JQuery is developed completely based on JavaScript.
=> JQuery is an open source JavaScript library.
=> JQuery is not replacement of JavaScript. It simplifies the JavaScript tasks.
=> JQuery is a cross-plateform JavaScript library designed to simplify the client-side scripting of HTML.
=> JQuery is used to overcome the load on server. Many tasks can be performed in client side by using JQuery.
=> It's punch line is "Write less do more...".

Creation of JQuery: 
********************
=> Jquery was invented by John Resig in 2006.

Features of JQuery:
********************
=> Simple
=> DOM Traversing
=> DOM Manipulation
=> Event Handling
=> Style Modification
=> Effects and Animations
=> AJAX Support
=> JQuery-UI
=> CSS3 Compliant
=> Light Weight Library
=> Cross Browser Support
=> Interpreted

S/W Requirements for JQuery:
---------------------------
=> Web Browser
=> Text Editor
=> JQuery file


$(document).ready(function(){
    alert("Welcome to jQuery");
});
Explanation of above code:
**************************
1) $():
--------
=> It is a jQuery factory function. It means it is main function in jQuery library.
=> $ is short form of "jQuery" function. We can also write jQuery in place of $.
=> This function is used to select an object. We can select built-in objects and also user define object or tags.
Ex in js: var t=document.getElementById("txtname");
Ex in jQuery: var t=$("#txtname");

2) document:
-------------
=>It is a built-in object of DOM. $(document) means we are selecting/passing object of DOM to jQuery library so that jQuery can use that object accordingly.

3) ready() :
------------
=> ready() is an event. It starts execution suddenly when a web page gets loaded completely.
=> We have to pass event handler function inside ready() event to perform some task. Handler functions are generally un-named/annonymous function. But we can also use a named function in that place if we want.
Ex:
function mydemo(){
alert("Welcome to jQuery");
}
$(document).ready(mydemo());

Note: ready() event is equivalent to "onload" event of javascript.

Selectors in jQuery:
********************
=> Selectors are used to select object in jQuery.
=> If we wants to perform some actions on an object then first of all we have to select that object in jQuery.
=> Selecting an object is also known as DOM traversing.
=> Below are the main selectors in jQuery -
1) Id Selector :
-----------------
=> Used to select object of a HTML tag based on Id.
=> We have to use "#" Symbol before the id of tag to select it's object.
syntax :$("#Id_of_tag");

2) Class Selector:
------------------
=> Used to select object of a HTML tag based on css class name.
=> We have to use "." Symbol before the class of tag to select it's object.
syntax :$(".Name_of_css_class");

3) Tag Selector:
-----------------
=> Used to select object of a HTML tag based of tag type.
=> We don't have to use any symbol before the type of tag to select it's object.
Syntax: $("Type_of_Tag");

4) Multiple Selectors:
----------------------
=> It is used to select object of multiple tags at once.
=> We have to use comma(,) symbol between the selector names.
syntax: $("selector1,selector2,.....");
Ex: $("#btn,.btn,button,#para,...");

5) Nested Selector(Parent-child selector):
---------------------------------------------
=> This selector is used to select object of child tag of a parent tag.
=> We have to separate the name of parent and child tag by using white space between them.
Syntax : $("ParentSelector childSelector");
Ex: $("#dv p")

6) Universal Selector:
-----------------------
=> Used to select all tags of webpage.
=> We have to use "*" symbol only.
Ex: $("*");

DOM Manipulation using jQuery:
*******************************
=> jQuery provides features to read and modify content of HTML tags.
=> jQuery provides velow functions for DOM manipulation-
1) val()
2) text()
3) html()
4) attr()
5) prop()

1. val():
---------
=> This function is used to get/set the content of form controls.
Syntax to get:
---------------
varName=Object_Of_tag.val();
Ex: var x=$("txtname").val();

Syntax to set:
---------------
Object_of_tag.val(content);
Ex: $("#name").val("Ramesh Kumar");

Note: val() function is quivalent to "value" property of javascript.

2. text():
-----------
=> This function is used to get/set content of normal HTML controls in plane text formate.
=> We can use this function with div,span,ul,ol,li,h1 etc tags.
Syntax to get:
    varName=Object_of_tag.text();
Ex : var x=$("#mydv").text();

Syntax to set:
    Object_of_tag.text(content);
Ex: $("#mydv").text("Hello World");

3) html():
-----------
=> This function is used to get/set the content of normal HTML controls in HTML text formate.
=> We can use this property with div,span,ul,li,ol,etc.
Syntax to get:
    varName=Object_of_tag.html();
Ex: var x=$("#mydv").html();

Syntax to set:
    Object_of_tag.html(content);
Ex : $("#mysp").html("<strong> Welcome to jQuery </strong>");


4) prop():
-----------
=> This property is used to get/set the property of a HTML tag.
=> Generally it is used to work with disabled, checked and readonly property.
=> prop function works in real datatype. It means it returns the value in actual data type.
Syntax to get:
---------------
varName=Object_of_tag.prop("name of property");
Ex: var x=$("#btn").prop("disabled");

Syntax to set:
--------------
Object_of_tag.prop("name of property","value of property");
Ex: $("#chk").prop("checked",true);

5) attr():
----------
=> Attr stands for attribute.
=> It is used to get/set the attribute of a HTML tag.
=> attr() function works in string type.
Syntax to get:
--------------
varName=ObjectOfTag.attr("NameOfAttribute");
Ex : var x=$("#mypic").attr("src");

Syntax to set:
--------------
ObjectOfTag.attr("NameOfAttribute","ValueForAttribute");
Ex: $("#txt").attr.("type","password");

Managing Styles using jQuery:
******************************
=> jQuery provides features to work with css properties.
=> We can get and set value of CSS properties using jQuery.
=> jQuery also supports properties of CSS-3.
=> Below are the main functions that are used to work with css-
1) css()
2) addClass()
3) removeClass()
4) toggleClass()

1) css():
----------
=> This function is used to get/set the css property in a HTML tag.
Syntax to get:
    varName=ObjectOfTag.css();
Ex: x=$("#mydv").css("color");

Syntax to set:
    ObjectOfTag.css("propertyName","value");
            OR
    ObjectOfTag.css(ObjectOfPropertiesWithValues);
Ex 1: $("#sperr").css("color","red");
Ex 2: var obj={"color":"green","background-color":"yellow","width":"200px"};
        $("#sperr").css(obj);

2) addClass():
--------------
=> This function is used to add/apply a css class in a tag.
Syntax: ObjectOfTag.addClass("NameOfCssClass");
Ex: $("#para").addClass("myclass");

3) removeClass():
-----------------
=> This function is used to remove a css class from a tag.
Syntax:
    ObjectOfTag.removeClass("NameOfClass");
Ex: $("#mypara").removeClass("myclass");

3) toggleClass():
-----------------
=> This function is used to add or remove a css class from a tag.
=> It creates toggle effects.
Syntax:
    ObjectOfTag.toggleClass("NameOfClass");
Ex: $("#mypara").toggleClass("myclass");

Advance DOM manipulation using jQuery:
***************************************
=> jQuery has features to modify DOM content in advance level.
=> Below are the main functions that are used to modify DOM in advance level-
1) append()
2) before()
3) after()
4) empty()
5) remove()

=> append(), before() and empty() functions are used to concat some content in selected object/tag as shown below-

<-- before
--------------
|            |
|            |
|append()    |
---------------
<-- after

Syntax of above three functions:
-------------------------------
ObjectOfTag.FunctionName(content);
Ex: $("#dv").append("Welcome");

=>empty() function is used to clear all content and child tags of a selected object.
Syntax: ObjectOfTag.empty();
Ex: $("#mypara").empty();

=> remove() function is used to remove a selected object from the DOM(webpage).
Syntax: ObjectOfTag.remove();
Ex: $("#mypara")remove();

Dynamic Even Binding using jQuery:
-----------------------------------
=> jQuery has the feature to add or remove event is a specific tag during run time of program.
=> It means we can add or remove event is a tag at run time by using jQuery.
=> jQuery has below functions to implement dynamic event binding-
1) bind()/on()/do()/live()
--------------------------
=> bind() function is used to attach an event is a selected tag during run time of program .
=> In different-different versions of jQuery we have different-different names of functions for dynamic event attach Ex: bind()/on()/do()/live().
Syntax :
--------
ObjectOfTag.bind("eventName",EventHandlerFunction);

2) Unbind()/die()/off():
------------------------
=> This function is used to remove an event from a selected tag.
Syntax:
--------
ObjectOfTag.bind("functionName")





